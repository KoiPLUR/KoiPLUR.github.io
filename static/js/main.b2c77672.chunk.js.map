{"version":3,"sources":["logo600.png","bg.png","getWeb3.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","rx_live","App","state","storageValue","accounts","contract","MintAmount","language","navigator","componentDidMount","alert","eth","getAccounts","net","getId","deployedNetwork","KOIProject","networks","instance","Contract","abi","address","setState","runExample","error","_GetNetworkId","GetNetworkId","accountStr","substr","NetWorkState","methods","getPrice","call","_currentPrice","balanceOf","_Balance","KOI_Provenance","_KOI_Provenance","symbol","_symbol","totalSupply","_totalSupply","currentPrice","Balance","handleSubmit","event","mint","send","value","from","_count","handleMintAmountChange","evt","test","target","this","class","Button","variant","disabled","Spinner","as","animation","size","role","aria-hidden","className","Navbar","bg","classname","expand","Container","fluid","Brand","href","Text","Dropdown","Toggle","id","Menu","Item","icon","src","width","alt","title","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","backgroundColor","logo","type","readOnly","maxLength","max","pattern","placeholder","onChange","onClick","Row","Col","xs","md","lg","margin","Card","height","Header","Body","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b2c77672.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo600.02edd67d.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.2038c0cf.png\";","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"https://rpc-mainnet.maticvigil.com\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from \"react\";\nimport KOIProject from \"./contracts/KOIProject.json\";\n//import AURAWrapped from \"./contracts/AURAWrapped.json\";\nimport getWeb3 from \"./getWeb3\";\nimport logo from \"./logo600.png\";\nimport \"./App.css\";\nimport \"./bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Button,\n  Dropdown,\n  Navbar,\n  Container,\n  Spinner,\n  Card,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n//import Wrapper from \"./components/Wrapper\";\nimport { IntlProvider } from \"react-intl\";\nimport bg from \"./bg.png\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst rx_live = /^[+-]?\\d*(?:\\d*)?$/;\n\nclass App extends Component {\n  state = {\n    storageValue: 0,\n    web3: null,\n    accounts: null,\n    contract: null,\n    MintAmount: \"0\",\n    language: navigator.language,\n  };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n      if (!window.web3) {\n        //用来判断你是否安装了metamask\n        window.alert(\"Please install MetaMask first.\"); //如果没有会去提示你先去安装\n        return;\n      }\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      if (networkId !== 137) {\n        window.alert(`Please Use Polygon Network`);\n      }\n\n      const deployedNetwork = KOIProject.networks[137];\n      const instance = new web3.eth.Contract(\n        KOIProject.abi,\n        deployedNetwork && deployedNetwork.address\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance }, this.runExample);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.error(error);\n    }\n  };\n\n  runExample = async () => {\n    const { accounts, contract, web3 } = this.state;\n    const _GetNetworkId = await web3.eth.net.getId();\n\n    // Stores a given value, 5 by default.\n    // await contract.methods.Get_rich_All().send({ from: accounts[0] });\n\n    // Get the value from the contract to prove it worked.\n    //  const [lang, setLang] = useState(\"en\");\n    console.log(\"accounts:\" + accounts);\n\n    //  console.log(useState[\"en\"]);\n\n    this.setState({ GetNetworkId: _GetNetworkId });\n    if (_GetNetworkId === 137) {\n      var accountStr = accounts[0];\n      accountStr = accountStr.substr(0, 6) + \"...\" + accountStr.substr(-6);\n\n      this.setState({ NetWorkState: accountStr });\n    } else {\n      this.setState({ NetWorkState: \"Connect wallet\" });\n    }\n\n    const _currentPrice = await contract.methods.getPrice().call();\n    const _Balance = await contract.methods.balanceOf(accounts[0]).call();\n    const _KOI_Provenance = await contract.methods.KOI_Provenance().call();\n    const _symbol = await contract.methods.symbol().call();\n    const _totalSupply = await contract.methods.totalSupply().call();\n\n    // Update state with the result.\n    this.setState({ currentPrice: _currentPrice });\n    this.setState({ Balance: _Balance });\n    this.setState({ KOI_Provenance: _KOI_Provenance });\n    this.setState({ symbol: _symbol });\n    this.setState({ totalSupply: _totalSupply });\n\n    // const _MaticBalance = await  accounts[0].getBalance()\n    // this.setState({ MaticBalance: _MaticBalance});\n  };\n\n  handleSubmit = async (event) => {\n    //event.preventDefault();\n    console.log(this.state.accounts[0]);\n\n    // await this.state.contract.Get_ricj_All.send({ from: this.accounts[0] });\n    if (this.state.MintAmount * this.state.currentPrice > 0) {\n      await this.state.contract.methods.mint(this.state.MintAmount).send({\n        value: this.state.MintAmount * this.state.currentPrice,\n        from: this.state.accounts[0],\n        _count: this.state.MintAmount,\n      });\n      this.setState({ MintAmount: 0 });\n    }\n  };\n\n  // handleSubmit = async (event) => {\n  //   event.preventDefault();\n  //   console.log(this.state.accounts[0]);\n  //   //  this.state.contract.methods.Get_rich_All().send({ from: this.state.accounts[0] });\n  //   this.state.contract.methods.mint(this.state.MintAmount).send({\n  //     value: (this.state.MintAmount * this.state.currentPrice) / 1e18,\n  //     from: this.state.accounts[0]\n  //   });\n  // };\n\n  handleMintAmountChange = (evt) => {\n    if (rx_live.test(evt.target.value)) {\n      this.setState({ MintAmount: evt.target.value });\n    }\n    if (evt.target.value > 20) {\n      this.setState({ MintAmount: 20 });\n    }\n  };\n\n  //\n\n  render() {\n    //  const context = useContext(Context);\n    // const [lang, setLang] = useState(\"en\");\n    // const [locale, setLocale] = useState(undefined);\n    // useEffect(async () => {\n    //   const resp = await fetch(`./lang/${lang}.json`);\n    //   const data = await resp.json();\n    //   setLocale(data);\n    // }, [lang]);\n\n    if (!this.state.web3) {\n      return (\n        <div class=\"container\">\n          <div class=\"position-absolute top-50 start-50 translate-middle\">\n            <Button variant=\"warning\" disabled class=\"\">\n              <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              />\n              {\"  \"}Loading Web3, accounts, and contract...\n            </Button>\n          </div>\n        </div>\n      );\n    }\n    if (this.state.GetNetworkId !== 137) {\n      return (\n        <div class=\"container\">\n          <div class=\"position-absolute top-50 start-50 translate-middle\">\n            <Button variant=\"warning\" disabled class=\"\">\n              <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              />\n              {\"  \"}Please Use Polygon Network\n            </Button>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <IntlProvider>\n        <div className=\"App\">\n          <div>\n            <Navbar\n              bg=\"light\"\n\n              classname=\"navbar-transparent\"\n              expand={true}\n            >\n              <Container fluid>\n                <Navbar.Brand href=\"#\">KOI Project</Navbar.Brand>\n                <Navbar.Text>\n                  <Dropdown>\n                    <Dropdown.Toggle variant=\"warning\" id=\"dropdown-basic\">\n                      {this.state.NetWorkState}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                      <Dropdown.Item href=\"#about\">About KOI</Dropdown.Item>\n                      <Dropdown.Item href=\"#Description\">\n                        Description\n                      </Dropdown.Item>\n                      <Dropdown.Item href=\"#LuckyMoney\">\n                        LuckyMoney\n                      </Dropdown.Item>\n                      <Dropdown.Item href=\"#Aura\">Aura</Dropdown.Item>\n                      <Dropdown.Item href=\"#Tools\">KOI Tools</Dropdown.Item>\n                      <Dropdown.Item href=\"#Record\">Record</Dropdown.Item>\n                      \n                      <Dropdown.Item\n                        href=\"https://twitter.com/KoiPlur \"\n                        target=\"_blank\"\n                      >\n                        {\" \"}\n                        <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} size=\"2x\" />\n                        Twitter\n                      </Dropdown.Item>\n                      <Dropdown.Item\n                        href=\"https://github.com/KoiPLUR/KOIProject\"\n                        target=\"_blank\"\n                      >\n                        <FontAwesomeIcon icon={[\"fab\", \"github\"]} size=\"2x\" />{\" \"}\n                        GitHub\n                      </Dropdown.Item>\n                      <Dropdown.Item\n                        href=\"https://www.facebook.com/KOI.PLUR\"\n                        target=\"_blank\"\n                      >\n                        <FontAwesomeIcon icon={[\"fab\", \"facebook\"]} size=\"2x\" />\n                        Facebook\n                      </Dropdown.Item>\n                      <Dropdown.Item\n                        href=\"https://t.me/KOIPLUR\"\n                        target=\"_blank\"\n                      >\n                        <FontAwesomeIcon icon={[\"fab\", \"telegram\"]} size=\"2x\" />\n                        Telegram\n                      </Dropdown.Item>\n\n                      <Dropdown.Item\n                        href=\"https://opensea.io/collection/koiproject\"\n                        target=\"_blank\"\n                      >\n                        <img\n                          src=\"https://storage.googleapis.com/opensea-static/Logomark/OpenSea-Full-Logo%20(dark).svg\"\n                          width=\"100%\"\n                          alt=\"Opensea\"\n                          title=\"Opensea\"\n                        />\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Navbar.Text>\n              </Container>\n            </Navbar>\n          </div>\n          <div\n            style={{\n              backgroundImage: `url(${bg})`,\n              backgroundPosition: \"center top\",\n              backgroundSize: \"contain\",\n              backgroundRepeat: \"no-repeat\",\n              backgroundColor: \"#efbd1a\",\n            }}\n          >\n            <img src={logo} alt=\"KOI-logo\" id=\"logo\" disabled />\n            {/* <Card style={{ width: \"18rem\" }}>\n              <Card.Body>\n                <Card.Title>Card Title</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  Card Subtitle\n                </Card.Subtitle>\n                <Card.Text>\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </Card.Text>\n                <Card.Link href=\"#\">Card Link</Card.Link>\n                <Card.Link href=\"#\">Another Link</Card.Link>\n              </Card.Body>\n            </Card> */}\n          </div>\n\n          <div\n            style={{\n              backgroundPosition: \"center top\",\n              backgroundSize: \"contain\",\n              backgroundRepeat: \"no-repeat\",\n              backgroundColor: \"#efbd1a\",\n            }}\n          >\n            <div className=\"section\">\n              <p>\n                <strong>Total Supply: </strong>\n                {this.state.totalSupply} / 30000\n              </p>\n\n              <p>\n                <strong>Final Provenance Proof: </strong>\n                <input\n                  type=\"textarea\"\n                  readOnly=\"true\"\n                  value={this.state.KOI_Provenance}\n                  class=\"form-control\"\n                />\n              </p>\n              <p>\n                <strong>KOI current price: </strong>\n                {this.state.currentPrice / 1e18} Matic\n              </p>\n              <p>\n                <div>\n                  <strong>Your Balance: </strong>\n                  {this.state.Balance} KOI\n                </div>\n              </p>\n              <h3>Mint KOI now!!!</h3>\n\n              <label>\n                <input\n                  type=\"textarea\"\n                  id=\"MintAmount\"\n                  maxLength={5}\n                  max={20}\n                  pattern=\"[+-]?\\d+(?:[.,]\\d+)?\"\n                  placeholder=\"Enter amount\"\n                  onChange={this.handleMintAmountChange}\n                  value={this.state.MintAmount}\n                  class=\"form-control\"\n                />\n              </label>\n\n              <Button\n                type=\"button\"\n                onClick={this.handleSubmit}\n                variant=\"warning\"\n              >\n                {\" \"}\n                Mint{\" \"}\n              </Button>\n              <p>\n                Total Cost:{\" \"}\n                {(this.state.MintAmount * this.state.currentPrice) / 1e18} Matic\n              </p>\n            </div>\n          </div>\n          <div\n            style={{\n              backgroundPosition: \"center top\",\n              backgroundSize: \"contain\",\n              backgroundRepeat: \"no-repeat\",\n              backgroundColor: \"#80aba9\",\n            }}\n          >\n            <div id=\"about\" className=\"section d-flex justify-content-center\">\n              <Row>\n                <Col xs={12} md={6} lg={6} style={{ margin: \"0 0 0.5rem 0\" }}>\n                  <Card\n                    style={{ width: \"100%\", height: \"30rem\" }}\n                    classname=\"mt-3\"\n                  >\n                    <Card.Header>\n                      <h2>What is the KOI Project?</h2>\n                    </Card.Header>\n                    <Card.Body>\n                      <Card.Text>\n                        Koi symbolizes good luck and fortune in many cultures,\n                        and there is no shortage of koi to convey blessings and\n                        express noble status. In these unsettling times, the\n                        global epidemic still needs to be worked on by humans\n                        worldwide, and the motivation of the KOI Project from\n                        the beginning was precisely to share blessings and luck\n                        with everyone through the blockchain concept.\n                        <br />\n                        <br /> As the project evolved, the concept of KOI\n                        Project gradually formed into a social creation\n                        experiment. You can see KOI Project as an art creation\n                        concept, NFT, blockchain game, or a meta-universe\n                        prototype.\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </Col>\n                <Col xs={12} md={6} lg={6} style={{ margin: \"0 0 0.5rem 0\" }}>\n                  <Card\n                    style={{ width: \"100%\", height: \"30rem\" }}\n                    classname=\"mt-3\"\n                  >\n                    <Card.Header>\n                      <h2>The clou of KOI Project</h2>\n                    </Card.Header>\n                    <Card.Body>\n                      <Card.Text>\n                        The clou of KOI Project is PLUR, which refers to\n                        Pluralism, a philosophical thinking in which it is\n                        believed that the world begins with a combination of\n                        multiple elements. PLUR also has an important symbolic\n                        meaning in global culture: Peace, Love, Unity and\n                        Respect, it's the best blessing for the entire human\n                        civilization.\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>\n        <div\n          style={{\n            backgroundPosition: \"center top\",\n            backgroundSize: \"contain\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor: \"#9790a4\",\n          }}\n        >\n          <div className=\"section\" id=\"Description\">\n            <h1> KOI Description</h1>\n            <p>\n              The basis of KOI Project consists of 30,000 koi, each KOI is\n              unique and has its own unique pattern using ERC721 protocol. After\n              casting, you can see the KOI pattern you own on OpenSea, and you\n              can also trade it on OpenSea, the first 5,000 KOI are sold at 0.05\n              Matic. It doubles every 1000 after 5000.\n            </p>\n            Example:\n            <ul>\n              <li>5999~5001, each cost 0.1 Matic</li>\n              <li>6999~6001, each cost 0.15 Matic</li>\n              <li>7999~7001, each cost 0.2 Matic</li>\n            </ul>\n            <p>\n              The most expensive KOI only costs 1.35 Matic. We use a very low\n              price because we want to make it easy for people to join the KOI\n              Project.\n            </p>\n            <p>\n              Why is it not free? The entire KOI Universe releases 30,000 KOI's,\n              and we want each KOI to be used as much as possible, so we charge\n              a small fee to reduce waste.\n            </p>\n            <p>\n              Once all KOI's are released, you can only buy them on secondary\n              markets like OpenSea, but of course you can also make an offer\n              directly on OpenSea for your favorite color.\n            </p>\n            <p>\n              You can Mint up to 20 KOI at a time, and each KOI will be born\n              with a randomly generated gender, which will be needed in the\n              future KOI universe.\n            </p>\n            <p>\n              Each KOI can produce 82 LuckyMoney per day at the beginning.\n              LuckyMoney is the foundation of the KOI universe.\n            </p>\n            <p>\n              LuckyMoney is the basis of the KOI universe. LuckyMoney is a coin\n              of ancient beliefs that can bring you luck, also known as fortune\n              gold.\n            </p>\n          </div>\n        </div>\n        <div\n          style={{\n            backgroundPosition: \"center top\",\n            backgroundSize: \"contain\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor: \"#69821b\",\n          }}\n        >\n          <div className=\"section\" id=\"LuckyMoney\">\n            <h1> LuckyMoney uses and restrictions</h1>\n            <p>Upgrade, each level requires: Level * 256 LuckyMoney</p>\n            <p>\n              LuckyMoney can be used to write \"secrets\", each character needs to\n              consume 1 LuckyMoney, UTF8 each character needs to consume 4\n              characters, only KOI all people can read \"secrets\", of course you\n              can also write a love letter and send KOI to your most important\n              person.\n            </p>\n            <p>\n              Every seven LuckyMoney can be exchanged for one Aura Coin (AURA),\n              which can only be exchanged if the KOI is level 2 or above.\n            </p>\n            <p>\n              KOI can only have their own LuckyMoney, and cannot transfer money\n              to each other.\n            </p>\n            <p>\n              LuckyMoney can be collected for all the KOI you have in the\n              contract, but you can also collect them individually.\n            </p>\n            <p>\n              With each level of KOI or each additional transaction, the\n              efficiency of producing LuckyMoney will increase.\n            </p>\n            <p>\n              LuckyMoney output: Basic daily output + level squared + number of\n              times traded\n            </p>\n          </div>\n        </div>\n        <div\n          style={{\n            backgroundPosition: \"center top\",\n            backgroundSize: \"contain\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor: \"#eaf4fc\",\n          }}\n        >\n          <div className=\"section\" id=\"Aura\">\n            <h1> Aura Coins AURA Description</h1>\n            <p>\n              Once each KOI is upgraded to level 2, you can exchange LuckyMoney\n              for AURA in one direction. The total amount of AURA issued is 30\n              million pieces, and once the exchange amount reaches 30 million,\n              you can no longer exchange it and can only use the existing amount\n              to circulate in the market.\n            </p>\n\n            <p>\n              The AURA in KOI can be transferred to other KOI, and can be\n              packaged to become freely tradable Aura coins in the market, or\n              can be saved back to the character.\n            </p>\n            <p>\n              AURA will continue to be used as the main currency in the KOI\n              universe, including the prize pool, fish pond, spirit box and feed\n              purchase, all need to consume AURA, related function upgrades or\n              through the fish pond and KOI casting derived NFT, all need to\n              consume feed and AURA.\n            </p>\n            <p>\n              In principle, the flow pool of AURA will be started after the\n              completion of Fish Pool and Spirit Box, and every AURA used by\n              users will be put into the flow pool, unless there is a demand in\n              the market, and there is a chance to recruit AURA holders in\n              advance to create the flow pool of DEX in the future.\n            </p>\n\n            <h1>Airdrop Program</h1>\n\n            <p>\n              No, there is no airdrop program for KOI, and there is no Genesis\n              mine for AURA, including the project team cannot get KOI for free\n              or produce AURA in advance.\n            </p>\n            <p>\n              This is a game and a community creation, not a financial game. We\n              hope KOI can bring a better side to the world, not a frenzied\n              pursuit of money.\n            </p>\n            <p>\n              KOI and AURA are the first phase of this project, we will continue\n              to improve the KOI-based cosmology, if you are interested in our\n              project, here is the official contract.\n            </p>\n\n            <ul>\n              <li>KOI：0x67bba38865a7c7ada68d51082da7fa33c3959d85</li>\n              <li>AURA：0x5e2ED6898D8Aa28467A6B2e024D55d79cA72d84B</li>\n            </ul>\n\n            <p>\n              Easy to operate interface is still under development, you can\n              still interact through the contract first for casting, trading or\n              collecting functions.\n            </p>\n          </div>\n        </div>\n\n        <div\n          style={{\n            backgroundPosition: \"center top\",\n            backgroundSize: \"contain\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor: \"#80aba9\",\n          }}\n        >\n          <div className=\"section\" id=\"Tools\">\n            <h1>Tools</h1>\n            <p>Coming soon</p>\n\n\n          </div>\n        </div>\n        <div\n          style={{\n            backgroundPosition: \"center top\",\n            backgroundSize: \"contain\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor: \"#007bbb\",\n          }}\n        >\n          <div className=\"section\" id=\"Record\">\n            <h1>KOI Record</h1>\n            <p>Coming soon</p>\n          </div>\n        </div>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n//import Wrapper from \"./components/Wrapper\";\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}